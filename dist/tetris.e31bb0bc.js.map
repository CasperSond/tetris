{"version":3,"sources":["src/js/createPlayingField.js","src/js/helpers.js","src/js/tetrominoes.js","src/js/rotate.js","src/js/getCurrentPositionOfTetromino.js","src/js/upDateScene.js","src/js/eventHandlers.js","src/js/main.js","index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["field","document","getElementById","firstChild","removeChild","i","rowElement","createElement","appendChild","j","columnElement","random","from","to","range","Math","floor","rotatedTetro","matrix","rotateNumber","len","length","layers","rotated","center","push","layer","getLayer","layerLen","layerLength","shift","shiftedArray","shiftArray","insertLayer","n","items","endItem","arr","copy","slice","removed","splice","concat","middle","max","bottomLayerStart","unshift","reverse","getCurrentPositionOfTetromino","liveTetromino","tetromino","allTetrominoes","type","rotationState","reduce","acc","rowArray","yOffSetIndex","columnElements","accColumns","el","xOffSetIndex","translatedPosition","topLeftRef","gameState","running","level","nextTick","points","lines","play","mainState","mainStateInit","Array","fill","liveTetrominoState","position","startGame","performance","now","renderNewGameState","dropNewTetromino","clockState","renderButton","rotateTetromino","oldPosition","offset","needToOffSet","map","x","y","colliding","isColliding","renderTetrominoMove","gameover","moveTetromino","difX","difY","legit","reachedBottom","collision","newPosition","xPos","yPos","newCoor","addToState","filled","checkFilledRows","forEach","removeAndRow","xRef","yRef","positions","highest","lowest","min","accessPosInDom","row","children","item","style","background","colors","refButtonPause","startGameBtn","innerText","text","display","console","log","newPos","removeOld","pauseGame","index","remove","prepend","every","rowFull","clearState","requestAnimationFrame","initEventHandlers","addEventListener","e","indexOf","which","move","start","pause","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","Date","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"ASAA,ACAA,IDAIoJ,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;AFAA,ACCA,ACCA,AHFA,SECSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;AFFF,ACEIjB,AFFJ,IEEIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,IAAAA,IAAI,CAAC7B,MAAL,ARLW,CACb,CACE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CADF,EAEE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAFF,EAGE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAHF,EAIE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAJF,CADa,EAOb,CACE,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,CADF,EAEE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHF,CAPa,EAYb,CACE,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,CADF,EAEE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHF,CAZa,EAiBb,CACE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,KAApB,CADF,EAEE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,KAApB,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAHF,EAIE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAJF,CAjBa,EAuBb,CACE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,CADF,EAEE,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHF,CAvBa,EA4Bb,CACE,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CADF,EAEE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHF,CA5Ba,EAiCb,CACE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CADF,EAEE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAFF,EAGE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHF,CAjCa;AOMb,ACAC,AJNH,AFAA,AHAO,AEAA,GOIL,MDEOc,ARNOzI,AEAAM,MHAD,ACAR,CAAgBL,EQMrB,ERNK,CEAA,CFAsBC,AEAAK,EFAtB,EAA0B,EEA1B,EAAgD,KHAlC;ASOpB,ATNC,ACAA,AMEF,AJHuD,MHC/ClB,ACAAc,AED6BK,KHCxB,ACAA,GDAGlB,ACAAc,IAAI,AEDmC,CFClCC,GDAG,CAACd,CCAT,CAAWa,IAAI,CAACJ,MAAL,CDAX,CAAwB,ICAIE,EAAE,CDA9B,CAAd,CCA+CD,IAAL,GAAY,CAA7B,CAAX,CAAd,gCEDkD,CAAG;AOOrDwJ,AJAK,AFNP,AHCE,AMEF,AJHE,EOMAA,IPNIjJ,GOMG,AJAOyH,ALLP9H,CSKCyJ,IAAR,ATLY,GSKGJ,ATLAvJ,CEDC,GOMG,ATLnB,CSKoB2J,CPNC,CAArB,EOMe,AJAV,AHNmB,COMCC,EJAS,GIAnB,CAAgB,APNAtJ,GOMhB,EAAqB,CAArB,APNS,IOMiB,GAA1B,GAAgCuJ,IAAI,CAAC1F,GAAL,EAA/C;ADEF,ACDEoF,AVLA,AMKAlK,ALLD,AEACkB,EOKAgJ,AJAAlK,AHLAkB,IOKI,CAACuJ,EDCEpB,ATNAtJ,CMKC,CAAC6I,GNLG,AGAA,CHAC1I,EUKb,APLegB,COKCwJ,GDClB,GAAwB,CTNtB,EAAyB,AMKzB,CAA0B,CHLC,COK3B,CAA6BP,CPLC,CAA9B,IGKA,CIAA,CJAqC,CIACD,IAAI,CAACS,IJAN9B,CAAC,EAAI,IIA1C;ADEA,ACDD,AVLG9I,AMKA,AHJF,IHDEA,EGCIoB,EGIA,CNLC,AMKA,AHJE,CHDDhB,CMKF,CHJMc,CGID,EAAL,EAAS6H,CHJG,CAAC1H,EHDjB,CAAkBrB,EMKd,CAAiB8I,AHJvB,CGIwB,CNLC,AMKAE,CNLC7I,IMKpB,IAA4B,CAAC,CNLjC,AMKA,EAAoC;AGEtC,ATNC,AMKG,AHJJ,AENF,MIWM,ANLEmB,IGII2H,EHJE,EGIE,CHJClI,EGIE+H,CAAC,CAACE,AHJA,CAAChI,IGIH,CHJF,CAAWI,GGIG,AHJA,EGIZ,CHJe,CAAjB,CGImB,AHJlC,CGImC,CAAC,CAAF,EAAK,CAAL,CAAjB,GAA2B,CAAC,CAAD,EAAI,CAAJ,CAAxC;AGEF,ACDJ,AJAM,AFRC,ADIL,IOIEyJ,EPJItJ,GCJQyB,CKSN,GNLK,CMKDuG,ACDA,EPJI,COID,CPJf,CMKQ,EAAN,ACDJ,iBJAoBN,AFRb,CAAuChG,GEQxC,UFRC,EAAsD;AKU1D,ATND,AMKG,AFRH,ACHF,GIUE,CAEE,CHJA,CFLIC,CJGD,ISMIsG,ATNAnJ,AMKA,CNLC,ESMR,CTNW,AMKAyI,AFRE,CKSD,ATNd,AMKc,CAACE,CNLC3I,AIHE8C,CJGD,GAAG,AMKP,ENLb,EAAwB9C,CAAC,AMKA,ENLzB,AMKS,ENLoB,AMKA,QFRI4C,aAAa,CAACG,IAA7B,CAAlB;AKUE,ACFJ,AVJI,AMKE,AFRJ,ADIA,MCJM7B,ADIFH,EMKEqI,ATNEnJ,CUIDwK,APHA,GAAG,CCJG,ADIT,EMKS,CLTG,EKSA,ACFlB,AVJoB,AGCF,CMKC,ANLjB,EOGmB,AVJE7K,AGCF,GMKGuJ,GAAG,CAACE,CTNG,CAACnJ,GSMd,EAAiBoJ,KAAjB,CAAuB,CLTVzG,CJGR,CAAuB,KAAvB,CAAnB,CIHc,EAAwBD,aAAa,CAACI,aAAtC,CAAhB,uBKSgB,CAAd;ACDF,AVJErD,AMKC,AFPH,ADGE,AERJ,ILOIA,CMGO,CICL6K,EPHIrJ,CHDD,AIFAD,CJECf,CMKC,GHJK,CGIDsI,CIDb,AJCc,AFPA,CEOCE,AFPA1F,ADGEpC,COGD,GVJd,CAAkBZ,AMKP,CFPN,ADGgB,CCHD,ADGEgB,GGIC,EAAhB,CHJc,CGIM,AHJZ,CHDf,AGC8BA,ECHTiC,GAAD,CDGL,CCHWC,ADG1B,QCHoB,EAAgBC,YAAhB,EAAiC;AKQrD,ACDA,AJCE,AFPF,ADGAlC,IAAAA,IMIIkI,ALPE/F,GDGC,CAACjC,GMIR,CNJA,CMIa,ANJA,CAACD,ICHM,EDGP,CCHUgC,ADGvB,QCH+B,CAACF,IEOhB,CAAC,CAAD,AFPO,CAAgB,CEOnB,CAAJ,CAAd,OFPsCK,UAAD,EAAaC,EAAb,EAAiBC,YAAjB,EAAkC;AKQvE,ACDH,AVJC,AMKC,AFPC,ADGH,SHDM,CIFCD,EAAE,CKOCgG,ATLAnJ,CAAC,GAAG,AIFA,CJEb,EAAgBA,CAAC,AIFf,EKOiB,ALPA,CKOCgJ,ATLA,EAApB,EAAwBhJ,CAAC,ESKE,ATL3B,CSK4B,CAAD,ATLE,CSKV,CAAjB;AACD,ATLC,AMKH,AFPK,GEFN,ONIUC,EIFEoD,WJEW,GAAG7D,IIFI,GAAG,CJEC,AID1BgD,CJC2B1C,YIDd,CJCK,AIDJwD,CJC2B,KAAvB,CAAtB,GIDI,CAAyB,CAAzB,IAA8BF,YADL,EAEzBZ,aAAa,CAACc,UAAd,CAAyB,CAAzB,IAA8BN,YAFL,CAA3B;AKQL,ACDDoH,AVJIvK,AMMJ,AFLMqD,ADAN,EOGAkH,IVJIvK,AMME4I,CHLD,CCACvF,GEKK,AHLFtD,COGC,APHA,EGKIJ,CIFD8K,APHAzJ,CHDC,CAACd,CICC,CAACiB,EDAE,CGKG,CAACvB,AFLjB,CAAgB4D,ADAA,COGC,APHvB,COGwB,CPHCzD,CHDrB,AGCsB,CHDCK,GGCG,CAA9B,EAAiCL,CAAC,CGKpB,CIFsB,AJEE,AHLtC,EAAsC,EHDlC,AICE,OEKQ,CAAd;AIDE,AVJC,AMMH,AFLK,ADAH,MGKI8I,EIFA6B,APHEtJ,GGKG,EIFA,APHE,CGKCzB,EIFAA,APHE0B,MGKM,CAACzB,CIFD,APHE,COGD+K,APHE/J,MAAD,EAASb,CAAT,CAAtB,EGKY,CAAwB,GIFxB,CAA0B,OJE1B,CAAd,gBIFc,CAAZ;ADEF,ATLC,AMOD6I,AHNE,EGMFA,KAAK,CAACL,AHNEjH,CMID,GAAP,INJgB,GAAGF,KGMnB,AHNwB,CGMD,AHNEL,MAAvB,CGMF,EAAgCwD,sBAAhC;AGDD,ACFG,AVHH,AMOCsE,AFPI,ADCF,EGMFA,KAAK,CAACN,AHNEhH,COED,IAAIxB,ANHAsD,CMGC,GAAG,CAAb,CPFiB,COEDtD,CAAC,CPFGuB,CCDlB,CMGkBoJ,AJItB,CAAuB,IIJI,CAAC3J,APFE,EGM9B,CHNiC,CGMD+G,AHNV,EOEpB,CPFmC,COED/H,APFlC,COEmC,EAAnC,EAAuC,aJIzC;AIHI,AJIL,AFPI,ADCD,KCVuB,EASpB,CDCGyB,CCViB,CMYjBkI,ANZN,GDUW,GOEC,APFEnI,COED+H,UAAP,APFmB,COEDoB,EPFI,CAA5B,EOE6B,CAAC3K,CAAD,CAAL,CAASkK,IAA3B,MAAqCP,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,ANFJ,ADAA,QOEIA,APFEnI,CMID6H,ELJErG,GAAG,CAACb,GMEG,CDElB,ACFmBsI,CDECnB,ANJE,CCAX,CAAWnG,CKItB,ANJyB1B,COED,CDEC,ACFA3B,CAAD,CAAN,CAAV,KPF2B,CAACqB,ECAzB,CAAP,EDA+B,EAAQI,KAAK,GAAGX,YAAhB,CAA/B;AMKF,ACFK,ANFJ,ADCCc,GCdK,CDcLA,CCDC,EAbI,CAAP,CKiBO,CAAC,KAAK4H,ANHA,CAAC9H,EMGP,EAAW+H,OAAX,CAAmB,ANHb,EAAevI,OAAf,CAAX,4DMGK,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,ANFJ,ADCE;;AMKHwI,ACFIc,APDF,IOCEA,GDEG,CAACvB,CNHC/H,KOCK,EPDZ,COCe,GDEjB,CCFI,EDEmB8H,kBAAvB;AACAU,ACFG,APDF,GORwB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,UDWF,GAAqBA,UAArB;ACDC;APAD,SAASjI,QAAT,CAAkBT,MAAlB,EAA0BgB,CAA1B,EAA6B;AOE7BgJ,APDE,MOCI,APDE9J,COCD2I,EPDI,GAAG7I,EOCd,GAAiB4J,CPDG,CAACzJ,MAAnB,COCF;APAE,AEzBF,IAAM2C,EFyBE7B,KAAK,EEzBE,CFyBCf,EEzBE,CFyBC,GAAGc,CAAC,GAAG,CAAxB;AACA,AEzBA+B,EAAAA,IFyBM7B,GEzBC,EAAE,EFyBI,GAAGF,AE1BA,CF0BC,GAAGC,KAAJ,GAAY,CAA5B;AACA,AEzBA+B,EAAAA,IF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","file":"tetris.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export default () => {\n  const field = document.getElementById(\"field\");\n\n  while (field.firstChild) {\n    field.removeChild(field.firstChild);\n  }\n\n  for (let i = 0; i < 20; i++) {\n    const rowElement = document.createElement(\"div\");\n    field.appendChild(rowElement);\n\n    for (let j = 0; j < 10; j++) {\n      const columnElement = document.createElement(\"div\");\n      rowElement.appendChild(columnElement);\n    }\n  }\n};\n","export function random(from, to) {\n  const range = Math.floor(Math.random() * (to - from + 1));\n  return range + from;\n}\n","export default [\n  [\n    [null, null, null, null],\n    [true, true, true, true],\n    [null, null, null, null],\n    [null, null, null, null]\n  ],\n  [\n    [true, false, false],\n    [true, true, true],\n    [false, false, false]\n  ],\n  [\n    [false, false, true],\n    [true, true, true],\n    [false, false, false]\n  ],\n  [\n    [false, true, true, false],\n    [false, true, true, false],\n    [false, false, false, false],\n    [false, false, false, false]\n  ],\n  [\n    [false, true, true],\n    [true, true, false],\n    [false, false, false]\n  ],\n  [\n    [true, true, false],\n    [false, true, true],\n    [false, false, false]\n  ],\n  [\n    [false, true, false],\n    [true, true, true],\n    [false, false, false]\n  ]\n];\n","export function rotatedTetro(matrix, rotateNumber = 0) {\n  if (rotateNumber === 0) return matrix;\n\n  rotateNumber = rotateNumber % 4;\n\n  const len = matrix.length;\n  const layers = Math.floor(len / 2);\n  const rotated = [];\n\n  if (len % 2 === 1) {\n    const center = matrix[layers][layers];\n    rotated.push([center]);\n  }\n\n  for (let i = layers - 1; i >= 0; i--) {\n    const layer = getLayer(matrix, i);\n    const layerLen = layer.length;\n    const layerLength = layerLen / 4 + 1;\n    const shift = layerLength - 1;\n    const shiftedArray = shiftArray(layer, shift * rotateNumber);\n\n    insertLayer(shiftedArray, rotated);\n  }\n\n  return rotated;\n}\n\nfunction getLayer(matrix, n) {\n  const len = matrix.length;\n  const items = len - n * 2;\n  const endItem = n + items - 1;\n  const arr = [];\n  for (let i = n; i < items + n; i++) {\n    arr.push(matrix[n][i]);\n  }\n\n  for (let i = n + 1; i <= endItem; i++) {\n    arr.push(matrix[i][endItem]);\n  }\n\n  for (let i = endItem - 1; i > n; i--) {\n    arr.push(matrix[endItem][i]);\n  }\n\n  for (let i = endItem; i > n; i--) {\n    arr.push(matrix[i][n]);\n  }\n\n  return arr;\n}\n\nfunction shiftArray(arr, shift) {\n  const copy = arr.slice();\n\n  const n = shift >= 0 ? copy.length - shift : shift * -1;\n  const removed = copy.splice(0, n);\n\n  return copy.concat(removed);\n}\n\nfunction insertLayer(layer, matrix) {\n  const len = layer.length;\n  const layerLength = len / 4 + 1;\n  const middle = Math.max(0, layerLength - 2);\n  const bottomLayerStart = layerLength + middle;\n\n  matrix.unshift(layer.slice(0, layerLength));\n  matrix.push(\n    layer.slice(bottomLayerStart, bottomLayerStart + layerLength).reverse()\n  );\n\n  for (let i = 0; i < middle; i++) {\n    matrix[i + 1].push(layer[layerLength + i]);\n    matrix[i + 1].unshift(layer[len - (i + 1)]);\n  }\n}\n","import allTetrominoes from \"./tetrominoes\";\nimport { rotatedTetro } from \"./rotate\";\n\nexport function getCurrentPositionOfTetromino(liveTetromino) {\n  const tetromino = allTetrominoes[liveTetromino.type];\n  const rotated = rotatedTetro(tetromino, liveTetromino.rotationState);\n\n  return rotated.reduce((acc, rowArray, yOffSetIndex) => {\n    const columnElements = rowArray.reduce((accColumns, el, xOffSetIndex) => {\n      if (el === true) {\n        const translatedPosition = [\n          liveTetromino.topLeftRef[0] + xOffSetIndex,\n          liveTetromino.topLeftRef[1] + yOffSetIndex\n        ];\n        accColumns.push(translatedPosition);\n      }\n      return accColumns;\n    }, []);\n\n    return acc.concat(columnElements);\n  }, []);\n}\n","import { random } from \"./helpers\";\nimport { getCurrentPositionOfTetromino } from \"./getCurrentPositionOfTetromino\";\nimport clearPlayingField from \"./createPlayingField\";\n\nconst gameState = {\n  running: false,\n  level: 3,\n  nextTick: 0,\n  points: 0,\n  lines: 0,\n  play: false\n};\n\nexport const mainState = [];\n\n(function mainStateInit() {\n  for (let i = 0; i < 20; i++) {\n    mainState.push(new Array(10).fill(null));\n  }\n})();\n\nexport const liveTetrominoState = {\n  topLeftRef: [0, 0],\n  rotationState: 0,\n  position: [],\n  type: 0\n};\n\nexport function startGame() {\n  gameState.running = gameState.play = true;\n  gameState.level = 1;\n  gameState.points = 0;\n  gameState.nextTick = performance.now() + 1000;\n  renderNewGameState();\n  dropNewTetromino();\n  clearPlayingField();\n  clockState();\n  renderButton();\n}\n\nexport function rotateTetromino() {\n  if (!gameState.running) return;\n  const oldPosition = liveTetrominoState.position.slice();\n  let position = getCurrentPositionOfTetromino({\n    ...liveTetrominoState,\n    ...{ rotationState: (liveTetrominoState.rotationState + 1) % 4 }\n  });\n\n  // if outside try move in\n  // check collision (and then try to move it + or - 1 - 2 ... offset it ... )\n\n  const offset = needToOffSet(position);\n\n  if (offset !== 0) {\n    position = position.map(([x, y]) => {\n      return [x + offset, y];\n    });\n  }\n\n  const colliding = isColliding(position);\n\n  if (!colliding) {\n    liveTetrominoState.rotationState = ++liveTetrominoState.rotationState;\n    liveTetrominoState.position = position;\n    gameState.nextTick += 200;\n\n    renderTetrominoMove(position, oldPosition);\n  }\n}\n\nexport function dropNewTetromino() {\n  gameState.nextTick = performance.now() + 1000 / gameState.level;\n  gameState.running = true;\n\n  liveTetrominoState.type = random(0, 6);\n  liveTetrominoState.topLeftRef = [3, 0];\n  liveTetrominoState.rotationState = 0;\n  liveTetrominoState.position = getCurrentPositionOfTetromino(\n    liveTetrominoState\n  );\n\n  if (isColliding(liveTetrominoState.position)) {\n    gameover();\n  } else {\n    renderTetrominoMove(liveTetrominoState.position);\n  }\n}\n\nexport function moveTetromino([difX, difY]) {\n  if (!gameState.running) return;\n\n  let legit = true;\n  let reachedBottom = false;\n  let collision = false;\n\n  const newPosition = liveTetrominoState.position.map(([xPos, yPos]) => {\n    const newCoor = [xPos + difX, yPos + difY];\n\n    if (newCoor[0] < 0 || newCoor[0] > 9) {\n      // tetromino at edge attempting to move outside\n      legit = false;\n    } else {\n      // a legit move\n      if (newCoor[1] < 20 && mainState[newCoor[1]][newCoor[0]] !== null) {\n        // collision happens\n\n        if (difY !== 0) {\n          // move down\n\n          collision = true;\n        } else {\n          // move left or right\n          legit = false;\n        }\n      }\n    }\n    if (newCoor[1] > 19) {\n      legit = false;\n      reachedBottom = true;\n    }\n\n    return newCoor;\n  });\n\n  if (reachedBottom || collision) {\n    addToState(liveTetrominoState);\n    const filled = checkFilledRows();\n    gameState.points = gameState.points + gameState.level * 15;\n\n    if (filled.length > 0) {\n      filled.forEach(el => {\n        mainState.splice(el, 1);\n        mainState.unshift(new Array(10).fill(null));\n        gameState.points =\n          gameState.points + gameState.level * filled.length * 100;\n        gameState.lines = gameState.lines + filled.length;\n\n        removeAndRow(el);\n      });\n    }\n\n    renderNewGameState();\n    dropNewTetromino();\n  }\n\n  if (legit && !collision) {\n    const oldPosition = liveTetrominoState.position.slice();\n    liveTetrominoState.position = newPosition;\n\n    const [xRef, yRef] = liveTetrominoState.topLeftRef;\n    liveTetrominoState.topLeftRef = [xRef + difX, yRef + difY];\n    renderTetrominoMove(newPosition, oldPosition);\n\n    if (difX !== 0) {\n      gameState.nextTick += 50;\n    }\n  }\n}\n\nconst field = document.getElementById(\"field\");\n\nfunction needToOffSet(positions) {\n  const highest = positions.reduce((acc, [x, y]) => {\n    return Math.max(x, acc);\n  }, 0);\n\n  if (highest > 9) return 9 - highest;\n\n  const lowest = positions.reduce((acc, [x, y]) => {\n    return Math.min(x, acc);\n  }, 10);\n\n  if (lowest < 0) return lowest * -1;\n\n  return 0;\n}\n\nfunction accessPosInDom([x, y], type) {\n  const row = field.children.item(y);\n  const el = row.children.item(x);\n\n  if (type === -1) {\n    el.style.background = \"black\";\n  } else {\n    const colors = [\n      \"rgb(97,197,235)\",\n      \"rgb(91, 102, 168)\",\n      \"rgb(225, 127, 58)\",\n      \"rgb(242, 211, 73)\",\n      \"rgb(101, 179, 82)\",\n      \"rgb(221, 58, 53)\",\n      \"rgb(161, 84, 153)\"\n    ];\n    el.style.background = colors[liveTetrominoState.type];\n  }\n}\n\nconst points = document.getElementById(\"points\");\nconst lines = document.getElementById(\"lines\");\nconst level = document.getElementById(\"level\");\nconst refButtonPause = document.getElementById(\"pauseGame\");\nconst startGameBtn = document.getElementById(\"startGame\");\n\nfunction renderNewGameState() {\n  points.innerText = gameState.points;\n  lines.innerText = gameState.lines;\n  level.innerText = gameState.level;\n}\n\nfunction renderButton() {\n  if (gameState.play) {\n    const text = gameState.running ? \"pause\" : \"resume\";\n    refButtonPause.innerText = text;\n    refButtonPause.style.display = \"block\";\n    startGameBtn.innerText = \"restart\";\n  } else {\n    refButtonPause.style.display = \"none\";\n    startGameBtn.innerText = \"start\";\n  }\n}\n\nrenderNewGameState();\n\nfunction gameover() {\n  console.log(\"gameover\");\n  gameState.running = gameState.play = false;\n}\n\nfunction renderTetrominoMove(newPos, removeOld) {\n  if (removeOld) {\n    removeOld.forEach(el => {\n      accessPosInDom(el, -1);\n    });\n  }\n  newPos.forEach(el => {\n    accessPosInDom(el, liveTetrominoState.type);\n  });\n}\n\nexport function pauseGame() {\n  // set time to next tick\n  gameState.running = !gameState.running;\n  renderButton();\n\n  if (gameState.running) {\n    clockState();\n  }\n}\n\nfunction removeAndRow(index) {\n  const row = field.children.item(index).remove();\n  const rowElement = document.createElement(\"div\");\n\n  for (let j = 0; j < 10; j++) {\n    const columnElement = document.createElement(\"div\");\n    rowElement.appendChild(columnElement);\n  }\n  field.prepend(rowElement);\n}\n\nfunction addToState({ position, type }) {\n  position.forEach(([x, y]) => {\n    mainState[y][x] = type;\n  });\n}\n\nfunction isColliding(positions) {\n  return positions.every(([x, y]) => {\n    return mainState[y][x];\n  });\n}\n\nfunction checkFilledRows() {\n  return mainState.reduce((acc, row, index) => {\n    const rowFull = row.every(el => {\n      return el !== null;\n    });\n\n    if (rowFull) {\n      acc.push(index);\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction clearState() {\n  mainState.forEach(row => {\n    row.forEach(el => {\n      el = null;\n    });\n  });\n\n  clearPlayingField();\n}\n\nfunction clockState() {\n  if (performance.now() >= gameState.nextTick) {\n    moveTetromino([0, 1]);\n    gameState.nextTick = performance.now() + 1000 / gameState.level;\n  }\n\n  if (gameState.running) {\n    requestAnimationFrame(clockState);\n  }\n}\n","import {\n  startGame,\n  pauseGame,\n  moveTetromino,\n  rotateTetromino\n} from \"./upDateScene\";\n\nexport function initEventHandlers() {\n  document.addEventListener(\"keydown\", e => {\n    if ([37, 39].indexOf(e.which) > -1) {\n      const move = e.which === 37 ? [-1, 0] : [1, 0];\n      moveTetromino(move);\n    } else if (e.which === 38) {\n      rotateTetromino();\n    } else if (e.which === 40) {\n      moveTetromino([0, 1]);\n    }\n  });\n\n  const start = document.getElementById(\"startGame\");\n  const pause = document.getElementById(\"pauseGame\");\n\n  start.addEventListener(\"click\", startGame);\n  pause.addEventListener(\"click\", pauseGame);\n}\n","import createPlayingField from \"./createPlayingField\";\nimport { initEventHandlers } from \"./eventHandlers\";\n\ncreatePlayingField();\ninitEventHandlers();\n","import main from \"./src/js/main\";\nimport \"./src/css/index.css\";\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}